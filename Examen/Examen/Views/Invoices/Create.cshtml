@model Examen.Models.InvoiceViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Invoices", FormMethod.Post, new { id = "frm-invoice" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Factura</h4>
        <hr />
        <div class="col-xs-12">
            <div class="form-group">
                <label>Contacto</label>
                @Html.TextBoxFor(x => x.ContactId, new { @class = "form-control", placeholder = "Ingrese el nombre del cliente" })
                @Html.ValidationMessage("Cliente", null, new { @class = "label label-danger" })
            </div>

            <div class="well well-sm">
                <div class="row">
                    <div class="col-xs-7">
                        @Html.HiddenFor(x => x.HeaderProductId)
                        @Html.TextBoxFor(x => x.HeaderProductName, new { @class = "form-control", placeholder = "Buscar producto", id = "Producto" })
                        @Html.ValidationMessage("producto_agregar", null, new { @class = "label label-danger" })
                    </div>
                    <div class="col-xs-2">
                        @Html.TextBoxFor(x => x.HeaderProductQuantity, new { @class = "form-control", placeholder = "Cantidad" })
                    </div>
                    <div class="col-xs-2">
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1">S/.</span>
                            @Html.TextBoxFor(x => x.HeaderProductPrice, new { @class = "form-control", placeholder = "Precio" })
                        </div>
                    </div>
                    <div class="col-xs-1">
                        <button class="btn btn-primary" type="submit" value="agregar_producto" name="action">
                            <i class="glyphicon glyphicon-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
            <hr />
            <ul id="facturador-detalle" class="list-group">
                @if (Model.InvoiceLine.Count > 0)
                {
                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-xs-1"></div>
                            <div class="col-xs-5">
                                <b>Producto</b>
                            </div>
                            <div class="col-xs-2 text-center">
                                <b>Cantidad</b>
                            </div>
                            <div class="col-xs-2 text-right">
                                <b>Precio Unitario</b>
                            </div>
                            <div class="col-xs-2 text-right">
                                <b>Monto</b>
                            </div>
                        </div>
                    </li>
                }
                @foreach (var d in Model.InvoiceLine)
                {
                    var i = Model.InvoiceLine.IndexOf(d);
                    <li class="list-group-item">
                        <!-- Modelo -->
                        @Html.Hidden("ComprobanteDetalle[" + i + "].ProductoId", d.ProductId)
                        @Html.Hidden("ComprobanteDetalle[" + i + "].ProductoNombre", d.ProductName)
                        @Html.Hidden("ComprobanteDetalle[" + i + "].PrecioUnitario", d.UnitPrice)
                        @Html.Hidden("ComprobanteDetalle[" + i + "].Cantidad", d.Quantity)
                        @Html.Hidden("ComprobanteDetalle[" + i + "].Retirar", d.Retirar, new { @class = "retirar" })
                        <div class="row">
                            <div class="col-xs-1 text-right">
                                <button class="btn btn-danger btn-xs btn-block btn-retirar" type="submit" value="retirar_producto" name="action">
                                    <i class="glyphicon glyphicon-remove"></i>
                                </button>
                            </div>
                            <div class="col-xs-5">
                                @d.ProductName
                            </div>
                            <div class="col-xs-2 text-center">
                                @d.Quantity
                            </div>
                            <div class="col-xs-2 text-right">
                                @string.Format("{0:c}", d.UnitPrice)
                            </div>
                            <div class="col-xs-2 text-right">
                                @string.Format("{0:c}", d.Amount())
                            </div>
                        </div>
                    </li>
                }
                @if (Model.InvoiceLine.Count > 0)
                {
                    <li class="list-group-item text-right" style="font-size:18px;">
                        @string.Format("{0:c}", Model.Amount())
                    </li>
                }
            </ul>
            @if (Model.InvoiceLine.Count > 0)
            {
                <button class="btn btn-primary btn-block btn-lg" type="submit" value="generar" name="action">Generar comprobante</button>
            }
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
        $(document).ready(function () {
            LimpiarAgregarProducto();

            $(".btn-retirar").click(function () {
                if (confirm('¿Está seguro de retirar el item seleccionado?')) {
                    $(this).closest('.list-group-item').find('.retirar').val("True");
                    return true;
                }

                return false;
            })
            /* Autocomplete de producto, jquery UI */
            $("#Producto").autocomplete({
                dataType: 'JSON',
                source: function (request, response) {
                    jQuery.ajax({
                        url: '/Invoices/BuscarProducto',
                        type: "post",
                        dataType: "json",
                        data: {
                            nombre: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    id: item.Id,
                                    value: item.Name,
                                    precio: item.Price
                                }
                            }))
                        }
                    })
                },
                select: function (e, ui) {
                    $("#HeaderProductId").val(ui.item.id);
                    $("#HeaderProductPrice").val(ui.item.precio);
                    $("#HeaderProductQuantity").focus();
                }
            })
        })

        function LimpiarAgregarProducto() {
            $("#HeaderProductId").val("");
            $("#Producto").val("");
            $("#HeaderProductPrice").val("");
            $("#HeaderProductQuantity").val(1);
        }
</script>
}
